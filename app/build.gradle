import com.android.builder.core.BuilderConstants

apply plugin: 'com.android.application'

def releaseTime() {
  return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def loadStringPropertyOrPlaceholder(String name) {
  return loadStringPropertyOrPlaceholder(name, "MISSING")
}

def loadStringPropertyOrPlaceholder(String name, String defaultValue) {
  return rootProject.hasProperty(name) ? rootProject.property(name) : defaultValue
}

android {
  signingConfigs {
    config {
      keyAlias 'debug'
      keyPassword '123456'
      storeFile file('../debug.keystore')
      storePassword '123456'
    }
    release {}
  }
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    ndk {
      abiFilters 'armeabi-v7a', 'armeabi', 'x86'
    }
    applicationId project.applicationId
    minSdkVersion 19
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionName project.versionName
    versionCode project.versionCode
    multiDexEnabled true
    buildConfigField 'String', 'IM_APP_KEY', "\"23370000\""
    buildConfigField 'String', 'LeanCloundAppId', "\"${LeanCloundAppId}\""
    buildConfigField 'String', 'LeanCloundAppKey', "\"${LeanCloundAppKey}\""
    buildConfigField("String", "API_ACCEPT", "\"application/vnd.wbkapi.v1+json\"")
    buildConfigField("String", "THUNB_LEVEL", "\"@30p\"")
    buildConfigField("String", "OSS_ACCESS_KEY_ID", "\"AqZdeQiAcAIUFhsf\"")
    buildConfigField("String", "OSS_ACCESS_KEY_SECRET", "\"c7zsTNmBNAU3AKRAWEdcc8HOdtDxal\"")
    buildConfigField("String", "API_ENDPOINT", "\"http://api.wubapp.cn/\"")
    buildConfigField("String", "OSS_IMAGE_ENDPOINT",
        "\"http://wub.oss-cn-shenzhen.aliyuncs.com\"")
    buildConfigField("String", "OSS_ENDPOINT", "\"oss-cn-shenzhen.aliyuncs.com\"")
    buildConfigField("String", "OSS_BUCKET", "\"wub\"")
    buildConfigField("String", "WEIXIN_APP_ID", "\"wxe5f8a9151f4247e4\"")
    buildConfigField("String", "WEIXIN_APP_SECRET", "\"3d79199dce7a34febb40006ea6e6c23e\"")
    buildConfigField("String", "WEIBO_APP_ID", "\"303482617\"")
    buildConfigField("String", "WEIBO_APP_SECRET", "\"28b2aabebf7f0e4a46bf3bc5aadf7577\"")
    buildConfigField("String", "QQ_APP_ID", "\"1105454100\"")
    buildConfigField("String", "QQ_APP_SECRET", "\"R3BeiWwuMTrrHFoq\"")
    manifestPlaceholders = [BUG_HD_SDK_GENERAL_KEY: "3a9405e81f8b05e28e29d701af2aa2bc",
                            UMENG_APPKEY          : "56de68a567e58e8fd3002027"]
    signingConfig signingConfigs.config
  }
  buildTypes {

    release {
      signingConfig signingConfigs.config
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      signingConfig signingConfigs.config
    }
  }
  dexOptions {
    incremental = true;
    preDexLibraries = false
    javaMaxHeapSize "4g"
  }
  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
  }
  lintOptions {
    // checkReleaseBuilds false
    // Or, if you prefer, you can continue to check for errors in release builds,
    // but continue the build even when errors are found:
    abortOnError false
    ignoreWarnings true
  }
  // 友盟多渠道打包
  productFlavors {
    wandoujia {}
    baidu {}
    c360 {}
    yingyongbao {}
    lianxiang {}
    taobao {}
    dev {
      applicationId project.applicationId + ".dev"
      versionCode project.versionCode
      versionName project.versionName + "-dev"
    }
  }
  productFlavors.all { flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL: name]
  }
}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  testCompile 'junit:junit:4.12'
  // library
  compile 'com.smartydroid:android-starter-kit:0.1.14'
  compile 'com.facebook.fresco:fresco:0.9.0'
  compile 'com.aliyun.dpa:oss-android-sdk:2.1.0'
  compile 'com.android.support:multidex:1.0.1'
  // bottom bars
  compile 'com.github.Aspsine:FragmentNavigator:1.0.2'
  compile 'com.roughike:bottom-bar:1.3.3'
  //
  compile 'info.hoang8f:fbutton:1.0.5'
  compile 'com.yqritc:recyclerview-flexibledivider:1.2.9'
  compile('com.github.afollestad.material-dialogs:core:0.8.5.8@aar') {
    transitive = true
  }
  compile 'com.kevinbas:android-media-picker:1.0.0'
  compile 'com.github.paolorotolo:appintro:3.4.0'
  //BugHd
  //  compile 'im.fir:fir-sdk:latest.integration@aar'
  compile 'zhou.widget:richtext:1.0.4'
  compile 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'
  compile 'com.umeng.analytics:analytics:latest.integration'

  compile deps.cardviewV7
  compile project(':OneSDK')
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
  testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
}

android.applicationVariants.all { variant ->
  def name = variant.buildType.name
  if (name.equals(BuilderConstants.DEBUG)) {
    return; // Skip debug builds.
  }
  variant.outputs.each { output ->
    def outputFile = output.outputFile
    if (outputFile != null && outputFile.name.endsWith('.apk')) {
      def fileName = "伍兵_v${android.defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
      output.outputFile = new File(outputFile.parent, fileName)
    }
  }
}

if (project.hasProperty('keyAlias') && project.hasProperty('storeFile') &&
    project.hasProperty('storePassword') &&
    project.hasProperty('keyPassword')) {
  android.signingConfigs.release.keyAlias = keyAlias
  android.signingConfigs.release.storeFile = file(storeFile)
  android.signingConfigs.release.storePassword = storePassword
  android.signingConfigs.release.keyPassword = keyPassword
} else {
  android.buildTypes.release.signingConfig = null
}
